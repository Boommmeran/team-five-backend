{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "TaskPro",
    "description": "Swagger TaskPro documentation"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produses": ["application/json"],
  "servers": [
    { "url": "http://localhost:9000/api" },
    { "url": "http://render.com/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "SendEmail",
      "description": "SendEmail endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Cards",
      "description": "Cards endpoints"
    },
    {
      "name": "Pictures",
      "description": "Pictures endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (email in use)",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User refresh",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful refresh",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Invalid token)",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Invalid token)",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user's avatar update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing file)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Invalid token)",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Invalid token",
            "content": {}
          }
        }
      }
    },
    "/users/theme": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update theme",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update theme",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Invalid token",
            "content": {}
          }
        }
      }
    },
    "/support": {
      "post": {
        "tags": ["SendEmail"],
        "summary": "Send email to support",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Sent object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sent successfully",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Invalid token)",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get all user's boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Current user's bords",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Boards"],
        "summary": "Add a new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New board created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "409": {
            "description": "Title conflict",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardByIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Boards"],
        "summary": "Update board by ID",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update board by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by ID",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Delete board by ID"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Deleted successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Board was not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "some_message_goes_here"
                }
              }
            }
          }
        }
      }
    },
    "/columns/{boardId}": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get columns of the board",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Current board's ID"
          }
        ],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Columns list of the board",
            "content": {
              "application/json": {
                "example": [
                  {
                    "_id": "65c7208924b8bccf2366c56a",
                    "title": "First column"
                  },
                  {
                    "_id": "65c720b3a4fecc638ce5d272",
                    "title": "Second column"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Columns"],
        "summary": "Add new column to the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New column created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/columns/{columnId}": {
      "patch": {
        "tags": ["Columns"],
        "summary": "Update column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Current column's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Column was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Current column's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{boardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get all cards of the board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board's ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "New card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardsOfBoardResponse"
                }
              }
            }
          },
          "400": { "description": "Bad request (invalid board id)" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{columnId}": {
      "post": {
        "tags": ["Cards"],
        "summary": "Add new card",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Column ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid column id"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}": {
      "patch": {
        "tags": ["Cards"],
        "summary": "Update card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Card's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete card",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Card's ID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/move": {
      "patch": {
        "tags": ["Cards"],
        "summary": "Move card to another column",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "type": "string",
            "description": "Card's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardMoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardUpdateResponse"
                }
              }
            }
          },
          "400": { "description": "Invalid column or card id" },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pictures": {
      "post": {
        "tags": ["Pictures"],
        "summary": "Add picture to cloudinary",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pictures object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#components/schemas/PicturesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful added picture",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/PicturesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing file or title)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Dorian Black"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123!"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Dorian Black"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123!"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YmNiNDI3ODdmYjIxNWMyNzg5MzZiYSIsImlhdCI6MTcwNjg2ODYzNywiZXhwIjoxNzA2OTUxNDM3fQ.QZtLQMkuSmE6f1oUgTR_qjCavsa_eYYDnsCh7orAYQw"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "65bcb42787fb215c278936ba"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Dorian"
              },
              "password": {
                "type": "string",
                "description": "User's hash password",
                "example": "$2b$10$XC8oVm8V8fnT4zIjFusuUuK86lsKQN80a9S/ME4aqiWnt1Ih5aGMe"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "token": {
                "type": "string",
                "description": "User's token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YmNiNDI3ODdmYjIxNWMyNzg5MzZiYSIsImlhdCI6MTcwNjg2ODYzNywiZXhwIjoxNzA2OTUxNDM3fQ.QZtLQMkuSmE6f1oUgTR_qjCavsa_eYYDnsCh7orAYQw"
              },
              "theme": {
                "type": "string",
                "description": "User's theme",
                "example": "light"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "avatars/65bcb42787fb215c278936ba"
              },
              "createdAt": {
                "type": "string",
                "description": "User's document created date",
                "example": "2024-02-02T09:21:43.425Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "User's document updated date",
                "example": "2024-02-02T09:21:43.425Z"
              }
            }
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "65bcb42787fb215c278936ba"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Dorian"
          },
          "password": {
            "type": "string",
            "description": "User's hash password",
            "example": "$2b$10$XC8oVm8V8fnT4zIjFusuUuK86lsKQN80a9S/ME4aqiWnt1Ih5aGMe"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YmNiNDI3ODdmYjIxNWMyNzg5MzZiYSIsImlhdCI6MTcwNjg2ODYzNywiZXhwIjoxNzA2OTUxNDM3fQ.QZtLQMkuSmE6f1oUgTR_qjCavsa_eYYDnsCh7orAYQw"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "avatars/65bcb42787fb215c278936ba"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "light"
          },
          "createdAt": {
            "type": "string",
            "description": "User's document created date",
            "example": "2024-02-02T09:21:43.425Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's document updated date",
            "example": "2024-02-02T09:21:43.425Z"
          }
        }
      },
      "AvatarRequest": {
        "type": "object",
        "required": ["avatar"],
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "avatars/65bcb42787fb215c278936ba"
          }
        }
      },
      "PicturesRequest": {
        "type": "object",
        "required": ["title", "picture"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Picture title"
          },
          "picture": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "PicturesResponse": {
        "type": "object",
        "properties": {
          "pictureURL": {
            "type": "string",
            "description": "Pictures url",
            "example": "pictures/title"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123!"
          }
        }
      },
      "UpdateThemeRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "light"
          }
        }
      },
      "SendEmailRequest": {
        "type": "object",
        "required": ["emailForSupport", "textMessage"],
        "properties": {
          "emailForSupport": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "textMessage": {
            "type": "string",
            "description": "User's message",
            "example": "I need help"
          }
        }
      },
      "AddNewBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "board title"
          },
          "background": {
            "type": "string",
            "example": "file_name"
          },
          "icon": {
            "type": "string",
            "example": "icon_id"
          }
        }
      },
      "AddNewBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c74f4d8e7d3822253b1b62"
          },
          "title": {
            "type": "string",
            "example": "board title"
          },
          "background": {
            "type": "string",
            "example": "file_name"
          },
          "icon": {
            "type": "string",
            "example": "icon_id"
          },
          "owner": {
            "type": "string",
            "example": "65c1eccce15fd71c3b8d6b07"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-02-10T10:26:21.691Z"
          },
          "updateddAt": {
            "type": "string",
            "example": "2024-02-10T10:26:21.691Z"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "icon": {
            "type": "string",
            "example": "icon_id"
          },
          "background": {
            "type": "string",
            "example": "file_name"
          }
        }
      },
      "UpdateBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65bff3d4673bc139d3ce264a"
          },
          "title": {
            "type": "string",
            "example": "Board name"
          },
          "background": {
            "type": "string",
            "example": "file_name"
          },
          "icon": {
            "type": "string",
            "example": "icon_id"
          }
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Some Board title"
            },
            "_id": {
              "type": "string",
              "example": "board_id"
            },
            "icon": {
              "type": "string",
              "example": "icon_id"
            },
            "background": {
              "type": "string",
              "example": "file_name"
            }
          }
        }
      },
      "GetBoardByIDResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c74f4d8e7d3822253b1b62"
          },
          "title": {
            "type": "string",
            "example": "Board title"
          },
          "background": {
            "type": "string",
            "example": "file_name"
          },
          "icon": {
            "type": "string",
            "example": "icon_id"
          }
        }
      },
      "AddNewColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "column name"
          }
        }
      },
      "AddNewColumnResponse": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c7577d76c2f3c28ad3c0e7"
          },
          "title": {
            "type": "string",
            "example": "Board title"
          },
          "board": {
            "type": "string",
            "example": "65c6a54e4560c440f9499899"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-02-10T11:01:17.033Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-02-10T11:01:17.033Z"
          }
        }
      },
      "GetColumnsByBoardIDResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Column title"
            },
            "_id": {
              "type": "string",
              "example": "65bfc91d89a44ee8a7ee0120"
            },
            "owner": {
              "type": "string",
              "example": "65bff3d4673bc139d3ce264a"
            }
          }
        },
        "example": [
          {
            "title": "Column title one",
            "_id": "first_column_id",
            "owner": "borad_id"
          },
          {
            "title": "Column title two",
            "_id": "second_column_id",
            "owner": "borad_id"
          }
        ]
      },
      "UpdateColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New column name"
          }
        }
      },
      "UpdateColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c7577d76c2f3c28ad3c0e7"
          },
          "title": {
            "type": "string",
            "example": "New column name"
          }
        }
      },
      "DeleteColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c7577d76c2f3c28ad3c0e7"
          },
          "title": {
            "type": "string",
            "example": "Column name"
          },
          "board": {
            "type": "string",
            "example": "65c6a54e4560c440f9499899"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-02-10T11:01:17.033Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-02-10T11:11:32.457Z"
          }
        }
      },
      "AddNewCardRequest": {
        "type": "object",
        "required": ["title", "text", "deadline", "priority"],
        "properties": {
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "Description"
          },
          "deadline": {
            "type": "string",
            "example": "2024-02-20T00:00:00.000Z"
          },
          "priority": {
            "type": "string",
            "example": "high"
          }
        }
      },
      "GetCardsOfBoardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "65c725247abc20e9f1203be2"
            },
            "title": {
              "type": "string",
              "example": "Card title"
            },
            "text": {
              "type": "string",
              "example": "desc"
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "example": "2024-02-10T07:09:18.165Z"
            },
            "column": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "65c720bca4fecc638ce5d275"
                },
                "title": {
                  "type": "string",
                  "example": "Column title"
                }
              }
            }
          }
        }
      },
      "AddNewCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c76573845e1959ec58d7e6"
          },
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "Description"
          },
          "deadline": {
            "type": "string",
            "example": "2024-02-20T00:00:00.000Z"
          },
          "priority": {
            "type": "string",
            "example": "high"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-02-10T12:00:51.041Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-02-10T12:00:51.041Z"
          }
        }
      },
      "CardUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "New card description"
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "example": "2024-03-01T00:00:00.000Z"
          }
        }
      },
      "CardUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65c76573845e1959ec58d7e6"
          },
          "title": {
            "type": "string",
            "example": "New card title"
          },
          "text": {
            "type": "string",
            "example": "New card description"
          },
          "priority": {
            "type": "string",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "example": "2023-03-01T00:00:00.000Z"
          },
          "column": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "65c720bca4fecc638ce5d275"
              },
              "title": {
                "type": "string",
                "example": "Column title"
              }
            }
          }
        }
      },
      "CardMoveRequest": {
        "type": "object",
        "required": ["column"],
        "properties": {
          "column": {
            "type": "string",
            "example": "65c720bca4fecc638ce5d275"
          }
        }
      },
      "DeleteCardRequest": {
        "type": "object",
        "required": ["_id", "owner"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "card_ID"
          },
          "owner": {
            "type": "string",
            "example": "column_ID"
          }
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "some text from backend"
          }
        },
        "example": {
          "message": "unauthorized"
        }
      },
      "OtherResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "some text from backend"
          }
        },
        "example": {
          "message": "some message"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
